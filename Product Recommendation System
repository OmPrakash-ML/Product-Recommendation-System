{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"17cIay0tv9pEMEdsverBGqJ5f1tmEP0yJ","authorship_tag":"ABX9TyOG1G1QYutF1oG74qhkeO6D"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Mounting Google Drive**"],"metadata":{"id":"TrvybqawXQms"}},{"cell_type":"code","execution_count":47,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TsK6-kYgXO0p","executionInfo":{"status":"ok","timestamp":1721489160409,"user_tz":-330,"elapsed":11228,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}},"outputId":"29910e6f-9b67-485b-dccc-b59e16b6d60a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","source":["**Data Preprocessing**"],"metadata":{"id":"-UEfuknxX2Bi"}},{"cell_type":"code","source":["import pandas as pd\n","\n","df = pd.read_csv('/content/drive/MyDrive/user_personalized_features.csv')"],"metadata":{"id":"I0bu4SkyX6oW","executionInfo":{"status":"ok","timestamp":1721489650516,"user_tz":-330,"elapsed":548,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}}},"execution_count":104,"outputs":[]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dIep3j9BYmbp","executionInfo":{"status":"ok","timestamp":1721489655356,"user_tz":-330,"elapsed":526,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}},"outputId":"56250b9a-e2d9-460e-fcc6-be795b890829"},"execution_count":105,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1000, 15)"]},"metadata":{},"execution_count":105}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":243},"id":"X2_XFBmvYKW_","executionInfo":{"status":"ok","timestamp":1721489659020,"user_tz":-330,"elapsed":546,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}},"outputId":"ac0aa610-1cce-4d3e-9d35-24fbd910419a"},"execution_count":106,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0 User_ID  Age  Gender  Location  Income   Interests  \\\n","0           0      #1   56    Male  Suburban   38037      Sports   \n","1           1      #2   46  Female     Rural  103986  Technology   \n","2           2      #3   32  Female  Suburban  101942      Sports   \n","3           3      #4   60  Female  Suburban   71612     Fashion   \n","4           4      #5   25    Male  Suburban   49725      Travel   \n","\n","   Last_Login_Days_Ago  Purchase_Frequency  Average_Order_Value  \\\n","0                    5                   7                   18   \n","1                   15                   7                  118   \n","2                   28                   1                  146   \n","3                   18                   3                  163   \n","4                    2                   5                  141   \n","\n","   Total_Spending Product_Category_Preference  Time_Spent_on_Site_Minutes  \\\n","0            2546                       Books                         584   \n","1             320                 Electronics                         432   \n","2            3766                     Apparel                         306   \n","3            4377                     Apparel                         527   \n","4            4502             Health & Beauty                          53   \n","\n","   Pages_Viewed  Newsletter_Subscription  \n","0            38                     True  \n","1            40                    False  \n","2             1                     True  \n","3            29                    False  \n","4            10                     True  "],"text/html":["\n","  <div id=\"df-e74c5f52-5801-47a2-b755-92c59f0c4837\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>User_ID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Location</th>\n","      <th>Income</th>\n","      <th>Interests</th>\n","      <th>Last_Login_Days_Ago</th>\n","      <th>Purchase_Frequency</th>\n","      <th>Average_Order_Value</th>\n","      <th>Total_Spending</th>\n","      <th>Product_Category_Preference</th>\n","      <th>Time_Spent_on_Site_Minutes</th>\n","      <th>Pages_Viewed</th>\n","      <th>Newsletter_Subscription</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>#1</td>\n","      <td>56</td>\n","      <td>Male</td>\n","      <td>Suburban</td>\n","      <td>38037</td>\n","      <td>Sports</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>18</td>\n","      <td>2546</td>\n","      <td>Books</td>\n","      <td>584</td>\n","      <td>38</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>#2</td>\n","      <td>46</td>\n","      <td>Female</td>\n","      <td>Rural</td>\n","      <td>103986</td>\n","      <td>Technology</td>\n","      <td>15</td>\n","      <td>7</td>\n","      <td>118</td>\n","      <td>320</td>\n","      <td>Electronics</td>\n","      <td>432</td>\n","      <td>40</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>#3</td>\n","      <td>32</td>\n","      <td>Female</td>\n","      <td>Suburban</td>\n","      <td>101942</td>\n","      <td>Sports</td>\n","      <td>28</td>\n","      <td>1</td>\n","      <td>146</td>\n","      <td>3766</td>\n","      <td>Apparel</td>\n","      <td>306</td>\n","      <td>1</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>#4</td>\n","      <td>60</td>\n","      <td>Female</td>\n","      <td>Suburban</td>\n","      <td>71612</td>\n","      <td>Fashion</td>\n","      <td>18</td>\n","      <td>3</td>\n","      <td>163</td>\n","      <td>4377</td>\n","      <td>Apparel</td>\n","      <td>527</td>\n","      <td>29</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>#5</td>\n","      <td>25</td>\n","      <td>Male</td>\n","      <td>Suburban</td>\n","      <td>49725</td>\n","      <td>Travel</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>141</td>\n","      <td>4502</td>\n","      <td>Health &amp; Beauty</td>\n","      <td>53</td>\n","      <td>10</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e74c5f52-5801-47a2-b755-92c59f0c4837')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e74c5f52-5801-47a2-b755-92c59f0c4837 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e74c5f52-5801-47a2-b755-92c59f0c4837');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0c76d710-a199-4ec0-a1eb-523462a63a01\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0c76d710-a199-4ec0-a1eb-523462a63a01')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0c76d710-a199-4ec0-a1eb-523462a63a01 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288,\n        \"min\": 0,\n        \"max\": 999,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          521,\n          737,\n          740\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"User_ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"#522\",\n          \"#738\",\n          \"#741\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 18,\n        \"max\": 64,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          24,\n          48,\n          54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Suburban\",\n          \"Rural\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 37363,\n        \"min\": 20155,\n        \"max\": 149951,\n        \"num_unique_values\": 996,\n        \"samples\": [\n          23828,\n          58392\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interests\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Technology\",\n          \"Food\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last_Login_Days_Ago\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1,\n        \"max\": 29,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          9,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase_Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average_Order_Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 54,\n        \"min\": 10,\n        \"max\": 199,\n        \"num_unique_values\": 189,\n        \"samples\": [\n          62,\n          151\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Spending\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1420,\n        \"min\": 112,\n        \"max\": 4999,\n        \"num_unique_values\": 908,\n        \"samples\": [\n          1500,\n          3285\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category_Preference\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Electronics\",\n          \"Home & Kitchen\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time_Spent_on_Site_Minutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 175,\n        \"min\": 2,\n        \"max\": 599,\n        \"num_unique_values\": 491,\n        \"samples\": [\n          87,\n          136\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pages_Viewed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 1,\n        \"max\": 49,\n        \"num_unique_values\": 49,\n        \"samples\": [\n          41,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Newsletter_Subscription\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":106}]},{"cell_type":"code","source":["# Dropping the unnecessary column\n","\n","df = df.drop(columns=['Unnamed: 0'])"],"metadata":{"id":"23XNxuVTb5YN","executionInfo":{"status":"ok","timestamp":1721489664090,"user_tz":-330,"elapsed":14,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}}},"execution_count":107,"outputs":[]},{"cell_type":"code","source":["# Clean the User_ID column\n","\n","df['User_ID'] = df['User_ID'].str.replace('#', '').astype(int)"],"metadata":{"id":"a1DXsGFod0Vq","executionInfo":{"status":"ok","timestamp":1721489668273,"user_tz":-330,"elapsed":524,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}}},"execution_count":108,"outputs":[]},{"cell_type":"code","source":["# Checking for missing values\n","\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RLwBgB44YZRK","executionInfo":{"status":"ok","timestamp":1721489671161,"user_tz":-330,"elapsed":565,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}},"outputId":"2e96406a-6fa5-437c-b316-badbd6c862aa"},"execution_count":109,"outputs":[{"output_type":"execute_result","data":{"text/plain":["User_ID                        0\n","Age                            0\n","Gender                         0\n","Location                       0\n","Income                         0\n","Interests                      0\n","Last_Login_Days_Ago            0\n","Purchase_Frequency             0\n","Average_Order_Value            0\n","Total_Spending                 0\n","Product_Category_Preference    0\n","Time_Spent_on_Site_Minutes     0\n","Pages_Viewed                   0\n","Newsletter_Subscription        0\n","dtype: int64"]},"metadata":{},"execution_count":109}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KHoNJGnRc3Qc","executionInfo":{"status":"ok","timestamp":1721489674596,"user_tz":-330,"elapsed":536,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}},"outputId":"0e885c3a-8c2d-4e02-d1b3-95b90b5cc089"},"execution_count":110,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1000 entries, 0 to 999\n","Data columns (total 14 columns):\n"," #   Column                       Non-Null Count  Dtype \n","---  ------                       --------------  ----- \n"," 0   User_ID                      1000 non-null   int64 \n"," 1   Age                          1000 non-null   int64 \n"," 2   Gender                       1000 non-null   object\n"," 3   Location                     1000 non-null   object\n"," 4   Income                       1000 non-null   int64 \n"," 5   Interests                    1000 non-null   object\n"," 6   Last_Login_Days_Ago          1000 non-null   int64 \n"," 7   Purchase_Frequency           1000 non-null   int64 \n"," 8   Average_Order_Value          1000 non-null   int64 \n"," 9   Total_Spending               1000 non-null   int64 \n"," 10  Product_Category_Preference  1000 non-null   object\n"," 11  Time_Spent_on_Site_Minutes   1000 non-null   int64 \n"," 12  Pages_Viewed                 1000 non-null   int64 \n"," 13  Newsletter_Subscription      1000 non-null   bool  \n","dtypes: bool(1), int64(9), object(4)\n","memory usage: 102.7+ KB\n"]}]},{"cell_type":"code","source":["# Encode categorical variables\n","\n","df['Gender'] = df['Gender'].astype('category').cat.codes\n","df['Location'] = df['Location'].astype('category').cat.codes\n","df['Interests'] = df['Interests'].astype('category').cat.codes\n","df['Product_Category_Preference'] = df['Product_Category_Preference'].astype('category').cat.codes\n","df['Newsletter_Subscription'] = df['Newsletter_Subscription'].astype(int)"],"metadata":{"id":"CuOKb8pldAYS","executionInfo":{"status":"ok","timestamp":1721489681649,"user_tz":-330,"elapsed":14,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}}},"execution_count":111,"outputs":[]},{"cell_type":"code","source":["df.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Drnx2GwYdDWV","executionInfo":{"status":"ok","timestamp":1721489686997,"user_tz":-330,"elapsed":594,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}},"outputId":"24eb76d3-2bb7-454d-e3be-5cee1385faaa"},"execution_count":112,"outputs":[{"output_type":"execute_result","data":{"text/plain":["User_ID                        int64\n","Age                            int64\n","Gender                          int8\n","Location                        int8\n","Income                         int64\n","Interests                       int8\n","Last_Login_Days_Ago            int64\n","Purchase_Frequency             int64\n","Average_Order_Value            int64\n","Total_Spending                 int64\n","Product_Category_Preference     int8\n","Time_Spent_on_Site_Minutes     int64\n","Pages_Viewed                   int64\n","Newsletter_Subscription        int64\n","dtype: object"]},"metadata":{},"execution_count":112}]},{"cell_type":"markdown","source":["**Feature Engineering**"],"metadata":{"id":"IkfDUogzdMJz"}},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","numerical_features = ['Age', 'Income', 'Last_Login_Days_Ago', 'Purchase_Frequency', 'Average_Order_Value', 'Total_Spending', 'Time_Spent_on_Site_Minutes', 'Pages_Viewed']\n","df[numerical_features] = scaler.fit_transform(df[numerical_features])\n"],"metadata":{"id":"h__xFOzPdUNM","executionInfo":{"status":"ok","timestamp":1721489698588,"user_tz":-330,"elapsed":499,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}}},"execution_count":113,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"tnXYCk7Tx4dE","executionInfo":{"status":"ok","timestamp":1721489703094,"user_tz":-330,"elapsed":1110,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}},"outputId":"d7fc7fa2-e14c-4423-c46e-d5739549c41d"},"execution_count":114,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   User_ID       Age  Gender  Location    Income  Interests  \\\n","0        1  1.112882       1         1 -1.158586          2   \n","1        2  0.371652       0         0  0.607340          3   \n","2        3 -0.666069       0         1  0.552607          2   \n","3        4  1.409373       0         1 -0.259544          0   \n","4        5 -1.184929       1         1 -0.845615          4   \n","\n","   Last_Login_Days_Ago  Purchase_Frequency  Average_Order_Value  \\\n","0            -1.290739            0.835231            -1.568734   \n","1            -0.071450            0.835231             0.254549   \n","2             1.513626           -1.280170             0.765068   \n","3             0.294336           -0.575036             1.075026   \n","4            -1.656526            0.130097             0.673904   \n","\n","   Total_Spending  Product_Category_Preference  Time_Spent_on_Site_Minutes  \\\n","0       -0.004898                            1                    1.633199   \n","1       -1.572201                            2                    0.767143   \n","2        0.854091                            0                    0.049228   \n","3        1.284289                            0                    1.308428   \n","4        1.372300                            3                   -1.392299   \n","\n","   Pages_Viewed  Newsletter_Subscription  \n","0      0.970302                        1  \n","1      1.113025                        0  \n","2     -1.670073                        1  \n","3      0.328049                        0  \n","4     -1.027820                        1  "],"text/html":["\n","  <div id=\"df-bfdab6c0-d840-4749-9c5a-50e1ac42e82f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User_ID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Location</th>\n","      <th>Income</th>\n","      <th>Interests</th>\n","      <th>Last_Login_Days_Ago</th>\n","      <th>Purchase_Frequency</th>\n","      <th>Average_Order_Value</th>\n","      <th>Total_Spending</th>\n","      <th>Product_Category_Preference</th>\n","      <th>Time_Spent_on_Site_Minutes</th>\n","      <th>Pages_Viewed</th>\n","      <th>Newsletter_Subscription</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1.112882</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>-1.158586</td>\n","      <td>2</td>\n","      <td>-1.290739</td>\n","      <td>0.835231</td>\n","      <td>-1.568734</td>\n","      <td>-0.004898</td>\n","      <td>1</td>\n","      <td>1.633199</td>\n","      <td>0.970302</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0.371652</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.607340</td>\n","      <td>3</td>\n","      <td>-0.071450</td>\n","      <td>0.835231</td>\n","      <td>0.254549</td>\n","      <td>-1.572201</td>\n","      <td>2</td>\n","      <td>0.767143</td>\n","      <td>1.113025</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>-0.666069</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.552607</td>\n","      <td>2</td>\n","      <td>1.513626</td>\n","      <td>-1.280170</td>\n","      <td>0.765068</td>\n","      <td>0.854091</td>\n","      <td>0</td>\n","      <td>0.049228</td>\n","      <td>-1.670073</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1.409373</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-0.259544</td>\n","      <td>0</td>\n","      <td>0.294336</td>\n","      <td>-0.575036</td>\n","      <td>1.075026</td>\n","      <td>1.284289</td>\n","      <td>0</td>\n","      <td>1.308428</td>\n","      <td>0.328049</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>-1.184929</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>-0.845615</td>\n","      <td>4</td>\n","      <td>-1.656526</td>\n","      <td>0.130097</td>\n","      <td>0.673904</td>\n","      <td>1.372300</td>\n","      <td>3</td>\n","      <td>-1.392299</td>\n","      <td>-1.027820</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bfdab6c0-d840-4749-9c5a-50e1ac42e82f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bfdab6c0-d840-4749-9c5a-50e1ac42e82f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bfdab6c0-d840-4749-9c5a-50e1ac42e82f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a97ed2ca-e3b8-4d1c-8b5f-1a2822794257\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a97ed2ca-e3b8-4d1c-8b5f-1a2822794257')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a97ed2ca-e3b8-4d1c-8b5f-1a2822794257 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"User_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288,\n        \"min\": 1,\n        \"max\": 1000,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          522,\n          738,\n          741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005003753127737,\n        \"min\": -1.7037897899086532,\n        \"max\": 1.7058652320959606,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          -1.259052178342834,\n          0.5198982679204428,\n          0.9646358794862621\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"int8\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Location\",\n      \"properties\": {\n        \"dtype\": \"int8\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005003753127737,\n        \"min\": -1.637415009948904,\n        \"max\": 1.838150813157695,\n        \"num_unique_values\": 996,\n        \"samples\": [\n          -1.5390625702106182,\n          -0.613537460732233\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interests\",\n      \"properties\": {\n        \"dtype\": \"int8\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last_Login_Days_Ago\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.000500375312774,\n        \"min\": -1.7784551375066189,\n        \"max\": 1.6355544504671455,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          -0.8030238266569719,\n          -1.5345973097942072\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase_Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005003753127737,\n        \"min\": -1.6327365034030026,\n        \"max\": 1.5403640214570757,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          -0.22246960346519,\n          -1.2801697784185495\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average_Order_Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005003753127737,\n        \"min\": -1.714596960045016,\n        \"max\": 1.7314076279292077,\n        \"num_unique_values\": 189,\n        \"samples\": [\n          -0.7664898776394095,\n          0.8562318595548016\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Spending\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005003753127737,\n        \"min\": -1.718651718006011,\n        \"max\": 1.722232716211952,\n        \"num_unique_values\": 908,\n        \"samples\": [\n          -0.7413757624720367,\n          0.5154236472024188\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category_Preference\",\n      \"properties\": {\n        \"dtype\": \"int8\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time_Spent_on_Site_Minutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005003753127737,\n        \"min\": -1.6828833454402798,\n        \"max\": 1.718665128380979,\n        \"num_unique_values\": 491,\n        \"samples\": [\n          -1.1985757737906868,\n          -0.9193867030750392\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pages_Viewed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005003753127737,\n        \"min\": -1.6700732529712476,\n        \"max\": 1.7552788874645893,\n        \"num_unique_values\": 49,\n        \"samples\": [\n          1.1843868640586164,\n          -1.241904235416768\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Newsletter_Subscription\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":114}]},{"cell_type":"markdown","source":["**Building the Recommendation System**"],"metadata":{"id":"t4-Ngl6CeNqn"}},{"cell_type":"code","source":["!pip install scikit-surprise\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GL25qxgGexoE","executionInfo":{"status":"ok","timestamp":1721489717400,"user_tz":-330,"elapsed":8639,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}},"outputId":"3665fe6a-673b-4cba-ec3b-21e2cbf2035f"},"execution_count":115,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: scikit-surprise in /usr/local/lib/python3.10/dist-packages (1.1.4)\n","Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.10/dist-packages (from scikit-surprise) (1.4.2)\n","Requirement already satisfied: numpy>=1.19.5 in /usr/local/lib/python3.10/dist-packages (from scikit-surprise) (1.25.2)\n","Requirement already satisfied: scipy>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from scikit-surprise) (1.11.4)\n"]}]},{"cell_type":"code","source":["from surprise import Dataset, Reader, SVD\n","from surprise.model_selection import train_test_split, cross_validate\n","\n","# Create a user-product interaction matrix\n","interaction_matrix = df.pivot(index='User_ID', columns='Product_Category_Preference', values='Purchase_Frequency').fillna(0)\n","\n","interaction_matrix"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"9z6ZBvc0eP8Y","executionInfo":{"status":"ok","timestamp":1721489720221,"user_tz":-330,"elapsed":580,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}},"outputId":"fc810cc9-2e18-4758-90e4-3215ae7b6a6c"},"execution_count":116,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Product_Category_Preference         0         1         2         3    4\n","User_ID                                                                 \n","1                            0.000000  0.835231  0.000000  0.000000  0.0\n","2                            0.000000  0.000000  0.835231  0.000000  0.0\n","3                           -1.280170  0.000000  0.000000  0.000000  0.0\n","4                           -0.575036  0.000000  0.000000  0.000000  0.0\n","5                            0.000000  0.000000  0.000000  0.130097  0.0\n","...                               ...       ...       ...       ...  ...\n","996                          0.835231  0.000000  0.000000  0.000000  0.0\n","997                         -0.575036  0.000000  0.000000  0.000000  0.0\n","998                          0.000000  1.187797  0.000000  0.000000  0.0\n","999                          0.000000  0.000000 -0.575036  0.000000  0.0\n","1000                         0.000000  0.000000  0.000000  0.835231  0.0\n","\n","[1000 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-b8c71086-553b-4b69-b7c8-12616d7129ea\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Product_Category_Preference</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","    </tr>\n","    <tr>\n","      <th>User_ID</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0.000000</td>\n","      <td>0.835231</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.835231</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-1.280170</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.575036</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.130097</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>0.835231</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>-0.575036</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>0.000000</td>\n","      <td>1.187797</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.575036</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1000</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.835231</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8c71086-553b-4b69-b7c8-12616d7129ea')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b8c71086-553b-4b69-b7c8-12616d7129ea button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b8c71086-553b-4b69-b7c8-12616d7129ea');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-afb77888-7daa-4d0f-a26e-12b57ff7e4fd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-afb77888-7daa-4d0f-a26e-12b57ff7e4fd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-afb77888-7daa-4d0f-a26e-12b57ff7e4fd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0d633c1b-7407-4b29-bb64-43e42f4ad6c8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('interaction_matrix')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0d633c1b-7407-4b29-bb64-43e42f4ad6c8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('interaction_matrix');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"interaction_matrix","summary":"{\n  \"name\": \"interaction_matrix\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"User_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288,\n        \"min\": 1,\n        \"max\": 1000,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          522,\n          738,\n          741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4637080794309385,\n        \"min\": -1.6327365034030026,\n        \"max\": 1.5403640214570757,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.9276030534340963,\n          0.0,\n          -0.22246960346519\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4553259515626977,\n        \"min\": -1.6327365034030026,\n        \"max\": 1.5403640214570757,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          0.13009712151926314,\n          0.8352305714881695,\n          -1.2801697784185495\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4572839256525089,\n        \"min\": -1.6327365034030026,\n        \"max\": 1.5403640214570757,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          1.5403640214570757,\n          0.0,\n          0.4826638465037163\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.41464629128740216,\n        \"min\": -1.6327365034030026,\n        \"max\": 1.5403640214570757,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.22246960346519,\n          0.0,\n          1.5403640214570757\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4443869636000849,\n        \"min\": -1.6327365034030026,\n        \"max\": 1.5403640214570757,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          1.1877972964726227,\n          0.0,\n          -1.2801697784185495\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":116}]},{"cell_type":"code","source":["# Convert the interaction matrix to the Surprise dataset format\n","reader = Reader(rating_scale=(interaction_matrix.min().min(), interaction_matrix.max().max()))\n","data = Dataset.load_from_df(df[['User_ID', 'Product_Category_Preference', 'Purchase_Frequency']], reader)\n","\n","# Train-test split\n","trainset, testset = train_test_split(data, test_size=0.2)\n","\n","# Use the SVD algorithm\n","algo = SVD()\n","\n","# Train the algorithm on the trainset\n","algo.fit(trainset)\n","\n","# Test the algorithm on the testset\n","predictions = algo.test(testset)\n","\n","# Calculate accuracy metrics\n","from surprise import accuracy\n","accuracy.rmse(predictions)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XQ6BZs-8ypQ8","executionInfo":{"status":"ok","timestamp":1721489725714,"user_tz":-330,"elapsed":528,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}},"outputId":"aff7eb08-96ef-4986-96bc-4db294371458"},"execution_count":117,"outputs":[{"output_type":"stream","name":"stdout","text":["RMSE: 1.0487\n"]},{"output_type":"execute_result","data":{"text/plain":["1.0486688700924256"]},"metadata":{},"execution_count":117}]},{"cell_type":"code","source":["def get_top_n_recommendations(user_id, n=5):\n","\n","    # Get a list of all product_ids\n","    product_ids = df['Product_Category_Preference'].unique()\n","\n","    # Generate predictions for all products for the given user\n","    predictions = [algo.predict(user_id, product_id) for product_id in product_ids]\n","\n","    # Sort predictions by estimated rating\n","    top_n_predictions = sorted(predictions, key=lambda x: x.est, reverse=True)[:n]\n","\n","    # Get the product ids of the top n recommendations\n","    top_n_product_ids = [pred.iid for pred in top_n_predictions]\n","\n","    return top_n_product_ids\n","\n","# Example: 5 recommendations for a user with User_ID 1\n","user_id = 1\n","recommendations = get_top_n_recommendations(user_id,5)\n","\n","category_mapping = {\n","    0: \"Apparel\",\n","    1: \"Books\",\n","    2: \"Electronics\",\n","    3: \"Health & Beauty\",\n","    4: \"Home & Kitchen\"\n","}\n","\n","top_n_categories = [category_mapping[category_id] for category_id in recommendations]\n","\n","print(f\"User {user_id}: {recommendations}\")\n","\n","# Output the recommendations\n","print(f\"5 Category Recommendations for User_ID {user_id}:\")\n","for category in top_n_categories:\n","    print(category)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j6XWgd2SfmSz","executionInfo":{"status":"ok","timestamp":1721489730174,"user_tz":-330,"elapsed":513,"user":{"displayName":"OM PRAKASH S","userId":"11021943231659641114"}},"outputId":"4af49c8a-c448-44a5-d0f9-590ad7f33de8"},"execution_count":118,"outputs":[{"output_type":"stream","name":"stdout","text":["User 1: [1, 0, 3, 4, 2]\n","5 Category Recommendations for User_ID 1:\n","Books\n","Apparel\n","Health & Beauty\n","Home & Kitchen\n","Electronics\n"]}]}]}